<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuThinButton22.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARcAAAApCAYAAAAf1G29AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJDSURBVHhe7d29axRBAMZh/yI7KzsrOyuxSaWFCBbaaKOF
        lYWCH8UVQgoLRdAiYJFKEDEgWoiIKCkiCClURJEUQYuRd3J75LgP4m2myvPAwHH5KH/MzO7OHioADYgL
        0IS4AE2IC9CEuABNiAvQxNy4bP/9U1Y/rpVLT++UM4+uleP3zpfDN04ZhnFARxqQFlxYuVlW3j8vv7e3
        hrWYNDMuLzfe1n+UsCQwb758KJu/vg1/ChxEaUBa8Gz9dbm6OqiNSGSmmYhLSpQ/Ovfkevm+9XP4LcCk
        eb0Yi0t+8eT9yzNLBDBNVjpLD66MrW7G4pICCQuwiCyXsh/TGcUl5cnUBmBRt188LMuvVurnGpdcFcrG
        jD0WoI+0JFsrGz82d+KSpVCWRAB9ZeaSGUyNS65Z59ISQF+fvn6us5calxPLF+s0BqCvLI2O3FraicvR
        u6fn3mkH8D9yN2+NSz4A7BdxAZoQF6AJcQGaEBegCXEBmhAXoAlxAZoYxSV30+WuOoD9MIpLnoh2hCWw
        X0ZxyTkuOc8FoK88p5jnFWtcukekAfrqjnCpccmSKKWx7wL01R3hUuMSg7XHdQAsqnvPWYzikllLDtd9
        t7k+/AZg73JMblZA3fEto7hENmK68y8B9iphyeQkbwDojMUlMnNJYLoTvAHmyf5KZiy7wxITcYkskXL1
        KCXKzq+3AgC7ZenT7a9kA3faSZZT49JJiXJJ6djgbL0pxjAMIyNH43bvkZ9lblwAFiUuQBPiAjQhLkAT
        4gI0UMo/lTmmUVWiFhIAAAAASUVORK5CYII=
</value>
  </data>
  <data name="bunifuThinButton21.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQMAAAApCAYAAAAxkUwvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAI8SURBVHhe7d27S1xBGEBx/yI7q3RWdqkkjZUpREgRm6RJ
        ilQpEvBRbCFsYRERTLGQwioQQoRgCpEQlC02ENhCRQxhC0mKiedz5+Kyj37vnB8MyPro5jh37t3ZmSRJ
        t4yBpGAMJAVjICkYA0nBGEgKE2Nw8+9vOjg9TM8+bKbHe6/SwvaTNPvmkcPhmJLBnGXuPm29Ta3vn9Kf
        m15/dg8bG4MvneP4Q4SAIHz79SN1f1/0vytpGjBnmbsf20fp5UEj5jRRGGUoBpSDX1p9/zpd9q77r0qq
        g0nzeyAG/ODizvOx5ZBUD6z8l969GFjtD8SAYhgCqQxcPrCfkFUxoBQsHSSVY+Pzbmp+bcXXEQPuGrCx
        4B6BVBbmPlsDnavuXQy4NOASQVJ5WBmwQogYcA+SWw+SynN2/jNWBxGDh821WCZIKg+XCnPrS3cxeLC1
        PPHJJEn1xtOKEQO+kFQuYyApGANJwRhICsZAUjAGkoIxkBSMgaRQxYCnj3gKSVKZqhjwjkWPNJPKVcWA
        cww4z0BSeXhfEu9PihjktzBKKk8+wiBiwCUCZXDfQCpPPsIgYoDG4X4MSeXIn4uCKgasCjgc8aTb7r8i
        qc445pArgnx8QRUDsJGQz0OTVF+EgH/+nJCcDcQArAwIQj4xVVK9sD/AiuB+CDAUA3DJwN0FysFOo6cm
        S9ONS4G8P8CG4aiTzUbGIKMc3HKYb6zEQwkOh2M6B0cb5s9NHWdiDCSVwxhICsZAUjAGkoIxkHQrpf/0
        YS91b+k2wgAAAABJRU5ErkJggg==
</value>
  </data>
</root>